plugins {
	id 'fabric-loom'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "mealapitest"
version = "0.0.0"
group = "testmod.mealapi"

static String terraformersUrl() {
	def url = "https://maven.terraformersmc.com/"
	def conn = new URL(url).openConnection()
	conn.connect()
	url = conn.getResponseCode() == 521 ? "https://raw.githubusercontent.com/TerraformersMC/Archive/main/releases" : url
	return url
}

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = terraformersUrl() }
	maven { url = "https://maven.ryanliptak.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Meal API
	implementation project(path: ":", configuration: "namedElements")

	// Test Runtime Mods
	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	modRuntimeOnly("squeek.appleskin:appleskin-fabric:${project.appleskin_version}") {
		exclude(group: "net.fabricmc")
	}
}

processResources {
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
}
